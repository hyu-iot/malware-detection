import re
import numpy as np

# Translate dateset to numpy array
# 
def preprocess_dataset(FILEPATH):

    fields = []
    types = []
    datainfo = {}

    f = open(FILEPATH, 'r')

    lines = f.readlines()
    dataindex = -1

    for i, line in enumerate(lines):
        if line.startswith("#fields"):
            print(line)
            fields = list(filter(None,re.split(r"\t|\s+", line)))[1:]
        if line.startswith("#types"):
            print(line)
            types = list(filter(None,re.split(r"\t|\s+", line)))[1:]
            dataindex = i + 1
            break
        
    datainfo = dict(zip(fields, types))
        
    target_fields = ["proto", "service", "duration", "orig_bytes", "resp_bytes", "missed_bytes",
                     "orig_pkts", "orig_ip_bytes", "resp_pkts", "resp_ip_bytes", "label", "detailed-label"]
    
    target_indicies = [fields.index(t) for t in target_fields]

    xs = np.empty((0, 9))
    ys = np.array([])

    for line in lines[dataindex:]:
        
        data = list(filter(None,re.split(r"\t|\s+", line)))
        target_data = [data[i] for i in target_indicies]
        print(target_data)
        print(target_data[2:-2])
        
        x = []

        if target_data[0] == "udp":
            x.append(0)

        elif target_data[0] == "tcp":
                
            if target_data[1] == "http":
                x.append(1)

            elif target_data[1] == "-":
                x.append(2)
        
        x.append(float(target_data[2]))
        x.extend([int(t) for t in target_data[3:-2]])
        
        y_label = 0

        if target_data[-2] == "Benign":
            y_label = 0
        
        else:
            if target_data[-1] == "C&C":
                y_label = 1
            elif target_data[-1] == "C&C-FileDownload":
                y_label = 2
            elif target_data[-1] == "DDoS":
                y_label = 3

        np.vstack((xs, np.array(x)))
        np.append(ys, y_label)
        x.clear()


    print(xs)
    print(ys)
    print(datainfo)


if __name__ == "__main__":
    preprocess_dataset("/home/yunsang/workspace/malware-detection/dataset/CTU-IoT-Malware-Capture-44-1.log.labeled")