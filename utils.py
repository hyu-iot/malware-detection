from cProfile import label
import re
import numpy as np

# Translate dateset to numpy array
# 
def preprocess_dataset(FILEPATH):

    fields = []
    types = []
    datainfo = {}

    f = open(FILEPATH, 'r')

    lines = f.readlines()
    dataindex = -1

    for i, line in enumerate(lines):
        if line.startswith("#fields"):
            fields = list(filter(None,re.split(r"\t|\s+", line)))[1:]
        if line.startswith("#types"):
            types = list(filter(None,re.split(r"\t|\s+", line)))[1:]
            dataindex = i + 1
            break
        
    datainfo = dict(zip(fields, types))
        
    # target_fields = ["proto", "service", "duration", "orig_bytes", "resp_bytes", "missed_bytes",
    #                  "orig_pkts", "orig_ip_bytes", "resp_pkts", "resp_ip_bytes", "label", "detailed-label"]
    
    target_fields = ["missed_bytes", "orig_pkts", "orig_ip_bytes", "resp_pkts", "resp_ip_bytes"]
    target_indicies = [fields.index(t) for t in target_fields]

    label_fields = ["label", "detailed-label"]
    label_indicies = [fields.index(t) for t in label_fields]

    xs = np.empty((0, 5))
    ys = np.array([])

    for line in lines[dataindex:]:
        
        data = list(filter(None,re.split(r"\t|\s+", line)))
        
        if (data[0] == "#close"):
            break

        target_data = [int(data[i]) for i in target_indicies]
        label_data = [data[i] for i in label_indicies]
        
        y_label = 0

        if label_data[-2] == "Benign":
            y_label = 0
        
        else:
            if label_data[-1] == "C&C":
                y_label = 1
            elif label_data[-1] == "C&C-FileDownload":
                y_label = 2
            elif label_data[-1] == "DDoS":
                y_label = 3

        xs = np.append(xs, np.array(target_data).reshape((1, 5)), axis=0)
        ys = np.append(ys, y_label)

    print(xs.shape)
    print(ys.shape)
    print(datainfo)

    np.save('./dataset/44-1_x.npy', xs)
    np.save('./dataset/44-1_y.npy', ys)


if __name__ == "__main__":
    preprocess_dataset("/home/yunsang/workspace/malware-detection/dataset/CTU-IoT-Malware-Capture-44-1.log.labeled")